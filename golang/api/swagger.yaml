basePath: /service2
definitions:
  entity.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      updated_at:
        type: string
    type: object
  usecase.CreateUserInputDTO:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  usecase.CreateUserOutputDTO:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  usecase.FindAllUsersOutputDTO:
    properties:
      users:
        items:
          $ref: '#/definitions/entity.User'
        type: array
    type: object
  usecase.FindUserByIdOutputDTO:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  usecase.UpdateUserInputDTO:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
    type: object
host: localhost
info:
  contact:
    email: email@example.com
    name: Manager API Support
    url: https://github.com/henriquemarlon
  description: This is a.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Manager API
  version: "1.0"
paths:
  /user:
    get:
      consumes:
      - application/json
      description: Get a list of all registered users.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/usecase.FindAllUsersOutputDTO'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Retrieve all users
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Create a new user with the input payload.
      parameters:
      - description: Create User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/usecase.CreateUserInputDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/usecase.CreateUserOutputDTO'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create new user
      tags:
      - user
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by their unique ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete user
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Retrieve a user by their unique ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usecase.FindUserByIdOutputDTO'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Find user by ID
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update an existing user's information.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/usecase.UpdateUserInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update user
      tags:
      - user
swagger: "2.0"
